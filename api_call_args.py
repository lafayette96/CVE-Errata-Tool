import os
from dotenv import load_dotenv
import requests
import json
import sys
import getopt

load_dotenv();
#params = 'after=2022-09-01' + '&' + 'before=2022-09-06' # + 'product=openstack' + 'sevrity=important' + 'ids=CVE-2022-2735' 

def get_data(query):
    full_query = os.getenv('API_HOST') + query
    r = requests.get(full_query)

    print(full_query)

    if r.status_code != 200:
        print('ERROR: Invalid request; returned' + str(r.status_code) + 'for the following query: \n' + full_query)

    if not r.json():
        print('\nNo data returned with the following query: \n' + full_query)
        #print(full_query)
        print('\n')
        sys.exit(0)

    return r.json()

def pretty_print_cve(data):

    cves_printed = []
    
    print('\n')
    print('CVE Number: \t| Severity: | Public date: | URL: \n')

    for cve in data:
        #print('{} \t |   {} \t |   Public date:{}'.format(cve['CVE'], cve['severity'], cve['public_date']))
        if cve['CVE'] not in cves_printed:
            cves_printed.append(cve['CVE'])
            print('{:<15} | {:<9} | {:<12} | {:<50}'.format(cve['CVE'], cve['severity'], cve['public_date'][0:10], cve['resource_url']))
    
    #print(cves_printed)

    print('\n')


def parse_input(argv):
    arg_after = ''
    arg_before = ''
    arg_product = ''
    arg_severity = ''
    arg_help = '{0} -a <after> -b <before> -p <product> -s <severity>'.format(argv[0])

    try: 
        opts, args = getopt.getopt(argv[1:], "ha:b:p:s:", ["help", "after=", "before=", "product=", "severity="])
    except:
        print(arg_help)
        sys.exit(2)

    params = ""

    check_if_arg_empty = lambda x: x if not params else '&' + x;

    for opt, arg in opts:
        match opt:
            case ("-h", "--help"):
                print(arg_help); #print the help message
                sys.exit(2);
            case ("-a", "--after"):
                #arg_after = arg; #TODO ?
                params = check_if_arg_empty('after=' + arg);
            case ("-b", "--before"):
                #arg_before = arg;
                params = check_if_arg_empty('before=' + arg_before);
            case ("-p", "--product"):
                #arg_product = arg;
                params = check_if_arg_empty('product=' + arg_product);
            case ("-s", "--severity"):
                #arg_severity = arg;
                params = check_if_arg_empty('severity=' + arg_severity);


    #print('before=' + arg_before)
    #print('after=' + arg_after)
    #print('product=' + arg_product)
    #print('severity=' + arg_severity)
    #print(params)
    #params = 'after=' + arg_after  + '&before=' + arg_before + '&product=' + arg_product + '&severity=' + arg_severity

    return params



if __name__ == "__main__":
    params = parse_input(sys.argv)
    #print(params)

    data = get_data(os.getenv('API_HOST') + '?' + params)
    #data_json = json.dumps(data, indent=4)
    #print(data_json)

    pretty_print_cve(data)
